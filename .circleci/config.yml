version: 2.1

# ----------------------------------
#       EXECUTOR
# ----------------------------------
executors:
  workhorse:
    docker:
      - image: circleci/golang:1.13.1
    working_directory: ~/project


# ----------------------------------
#       ORBS
# ----------------------------------
orbs:
  gcp-cli: circleci/gcp-cli@1.0.1



# ----------------------------------
#       JOBS
# ----------------------------------
jobs:
  # ------Inject ENV vars ------------
  gitclone:
    executor: workhorse
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  # --------BUILD && TEST-------------
  tests:
    executor: workhorse
    steps:
      - attach_workspace:
          at: .
      # try to use the cache
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
            # if no full cache at least restore partial dependencies
            - go-mod-v1-
      - run:
          name: go get
          command:  |
            cd /tmp
            go get -u -v -tags sqlite github.com/gobuffalo/buffalo/buffalo
            go get -u -v github.com/gobuffalo/buffalo-plugins
            cd -
            buffalo plugins install github.com/gobuffalo/buffalo-pop
      - run:
          name: provision test database
          command: |
            mkdir -p /tmp/databases
            touch /tmp/databases/worldlocations_test.sqlite
            buffalo pop reset -e test
      # Test
      - run: GO_ENV=test go test -v -tags sqlite ./...
      # save cache
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg"

  # --------Inject ENV vars ----------
  docker_push:
    executor: workhorse
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id:   $GCLOUD_PROJECT_ID
          google-compute-zone: $GCLOUD_PROJECT_REGION
      - run: |
          appversion=$(echo $CIRCLE_SHA1 | cut -c1-7) || appversion=$(echo $CIRCLE_TAG | tr . -)
          gcloud auth activate-service-account circleci@worldlocation-io.iam.gserviceaccount.com --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
          gcloud config set compute/zone $GCLOUD_PROJECT_REGION
          docker build --rm=false -t gcr.io/${GCLOUD_PROJECT_ID}/worldlocations:${appversion} .
          gcloud docker -- push gcr.io/${GCLOUD_PROJECT_ID}/worldlocations:${appversion}


  # -------- deploy ------------------
  deploy:
    executor: workhorse
    steps:
      - attach_workspace:
          at: .
          path:
            - Dockerfile
            - app.yaml
            - secrets
            - bin
#      - run:
#          name:              "deploy to app engine"
#          no_output_timeout: 20m # sometime app engine is a bit slow :/
#          command:           |
#            [ -z "$CIRCLE_TAG" ] && appversion=$(echo $CIRCLE_SHA1 | cut -c1-7) || appversion=$(echo $CIRCLE_TAG | tr . -)
#            set -o pipefail
#            sudo apt-get install google-cloud-sdk-app-engine-go -y
#            gcloud config set project $GCLOUD_PROJECT_ID
#            gcloud app deploy -v $appversion -q



# ----------------------------------
#       WORKFLOW
# ----------------------------------
workflows:
  # -------- DEV and all branch (tests) ------------------
  "wlio-dev":
    jobs:
      # clone repo
      - gitclone
      # test and build.
      - tests:
          requires:
            - gitclone
      - docker_push:
          context: wlio-stg
          requires:
            - gitclone
            - tests

  # -------- stg ------------------
  "wlio-stg":
    jobs:
      # clone repo
      - gitclone:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+-RC-\d+/
            branches:
              ignore: /.*/
      # test and build.
      - tests:
          requires:
            - gitclone
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+-RC-\d+/
            branches:
              ignore: /.*/
      #setup environment variables for the App Engine
      - docker_push:
          context: wlio-stg
          requires:
            - gitclone
            - tests
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+-RC-\d+/
            branches:
              ignore: /.*/
      #deploy
#      - deploy:
#          context: wlio-stg
#          requires:
#            - tests
#            - inject_env_vars
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+-RC-\d+/
#            branches:
#              ignore: /.*/

  #-------- prod ------------------
  "wlio-prod":
    jobs:
      # clone repo
      - gitclone:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+/
            branches:
              ignore: /.*/
      # test and build.
      - tests:
          requires:
            - gitclone
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+/
            branches:
              ignore: /.*/k
      #setup environment variables for the App Engine
      - docker_push:
          context: wlio-prod
          requires:
            - gitclone
            - tests
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+/
            branches:
              ignore: /.*/
      # deploy
#      - deploy:
#          context: wlio-prod
#          requires:
#            - tests
#            - inject_env_vars
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+/
#            branches:
#              ignore: /.*/
