version: 2.1

# ----------------------------------
#       EXECUTOR
# ----------------------------------
executors:
  workhorse:
    docker:
      - image: circleci/golang:1.11
      - image: circleci/mysql:5.7
    working_directory: ~/project


# ----------------------------------
#       ORBS
# ----------------------------------
orbs:
  gcp-cli: circleci/gcp-cli@1.0.1



# ----------------------------------
#       JOBS
# ----------------------------------
jobs:
  # ------Inject ENV vars ------------
  gitclone:
    executor: workhorse
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  # --------BUILD && TEST-------------
  test_and_build:
    executor: workhorse
    steps:
      - run:
          name:    Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: fix github
          command: |
            git config --global url.git@github.com:.insteadOf https://github.com/
      - attach_workspace:
          at: .
      # try to use the cache
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: go get
          command:  go get -u -v github.com/gobuffalo/buffalo/buffalo
      - run:
          name: provision test database
          command: buffalo db migrate reset -e test
      # TESTS
      - run: go test -v ./...
      # build if test passes
      - run: env GOOS=linux GOARCH=amd64 go build -v -o bin/leadservice
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          root: .
          paths:
            - secrets
            - bin
            - Dockerfile
      # save cache
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  # --------Inject ENV vars ----------
  inject_env_vars:
    executor: workhorse
    steps:
      - attach_workspace:
          at: .
          path:
            - app.yaml
      - run:
          name:    appengine_deploy
          command: |
            printf "\n" >> app.yaml
            printf "service: \"%s\"\n" $GAE_SERVICE_NAME >> app.yaml
            printf "\n" >> app.yaml
            printf "env_variables:\n" >>  app.yaml
            printf "  DATABASE_PASSWORD: \"%s\"\n" $DATABASE_PASSWORD>> app.yaml
            printf "  SQL_INSTANCES_NAMES: \"%s\"\n" $SQL_INSTANCES_NAMES >> app.yaml
            printf "  GO_ENV: \"%s\"\n" $GO_ENV >> app.yaml
      - persist_to_workspace:
          root: .
          paths:
            - app.yaml


  # -------- deploy ------------------
  deploy:
    executor: workhorse
    steps:
      - attach_workspace:
          at: .
          path:
            - Dockerfile
            - app.yaml
            - secrets
            - bin
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id:   $GCLOUD_PROJECT_ID
          google-compute-zone: $GCLOUD_PROJECT_REGION
      - run:
          name:              "deploy to app engine"
          no_output_timeout: 20m # sometime app engine is a bit slow :/
          command:           |
            [ -z "$CIRCLE_TAG" ] && appversion=$(echo $CIRCLE_SHA1 | cut -c1-7) || appversion=$(echo $CIRCLE_TAG | tr . -)
            set -o pipefail
            gcloud auth activate-service-account circleci@ls-marketing-dev.iam.gserviceaccount.com --key-file=${HOME}/gcloud-service-key.json
            sudo apt-get install google-cloud-sdk-app-engine-go -y
            gcloud config set project $GCLOUD_PROJECT_ID
            gcloud config set compute/zone $GCLOUD_PROJECT_REGION
            gcloud app deploy -v $appversion -q



# ----------------------------------
#       WORKFLOW
# ----------------------------------
workflows:
  # -------- DEV and all branch (tests) ------------------
  #  "mkt-wlio-dev":
  #    jobs:
  #      # clone repo
  #      - gitclone:
  #          filters:
  #            branches:
  #              ignore: master
  #      # test and build.
  #      - test_and_build:
  ##          context: mkt-wlio-dev
  #          requires:
  #            - gitclone
  #          filters:
  #            branches:
  #              ignore: master
  #      #setup environment variables for the App Engine
  #      - inject_env_vars:
  ##          context: mkt-wlio-dev
  #          requires:
  #            - gitclone
  #          filters:
  #            branches:
  #              ignore: master
  #deploy
  #      - deploy:
  #          context: mkt-wlio-dev
  #          requires:
  #            - test_and_build
  #            - inject_env_vars
  #          filters:
  #            branches:
  #              only: dev


  # -------- prod ------------------
  "mkt-wlio-stg":
    jobs:
      # clone repo
      - gitclone:
          filters:
            branches:
              only: master
      # test and build.
      - test_and_build:
          context: wlio-stg
          requires:
            - gitclone
          filters:
            branches:
              only: master
      #setup environment variables for the App Engine
      - inject_env_vars:
          context: wlio-stg
          requires:
            - gitclone
          filters:
            branches:
              only: master
      #deploy
  #      - deploy:
  #          context: wlio-stg
  #          requires:
  #            - test_and_build
  #            - inject_env_vars
  #          filters:
  #            branches:
  #              only: master


  # -------- prod ------------------
#  "mkt-wlio-prod":
#    jobs:
#      # clone repo
#      - gitclone:
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+/
#            branches:
#              ignore: /.*/
#      # test and build.
#      - test_and_build:
#          context: mkt-wlio-prod
#          requires:
#            - gitclone
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+/
#            branches:
#              ignore: /.*/
#      #setup environment variables for the App Engine
#      - inject_env_vars:
#          context: mkt-wlio-prod
#          requires:
#            - gitclone
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+/
#            branches:
#              ignore: /.*/
#      # deploy
#      - deploy:
#          context: mkt-wlio-prod
#          requires:
#            - test_and_build
#            - inject_env_vars
#          filters:
#            tags:
#              only: /^v\d+\.\d+\.\d+/
#            branches:
#              ignore: /.*/
